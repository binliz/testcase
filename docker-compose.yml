version: '3.7'
services:
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "5173:5173"
      - "6001:6001"
    networks:
      laravel-testcase-networks:
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./src:/app
    env_file:
      - .env
    restart: always
    links:
      - appsetup
      - fpm
      - socket
      - frontend
  fpm:
    build:
      context: .
      dockerfile: php/Dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
        - USER=${USER:-laravel}
    volumes:
      - ./srv:/app
    restart: always
    networks:
      laravel-testcase-networks:
    links:
      - db
      - appsetup
    env_file:
      - .env
  fpm-worker:
    build:
      context: .
      dockerfile: php/Dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
        - USER=${USER:-laravel}
    networks:
      laravel-testcase-networks:
    working_dir: /app
    restart: always
    tty: true
    stdin_open: true
    command: /bin/sh -c "php ./artisan queue:listen --timeout=0 --delay=0 --memory=512 --queue=\"default\""
    links:
      - appsetup
      - db
      - fpm
    volumes:
      - ./scr:/app
    deploy:
      replicas: 3
    env_file:
      - .env
  frontend:
    build:
      context: .
      dockerfile: node/Dockerfile
    networks:
      laravel-testcase-networks:
    working_dir: /app
    expose:
      - 5173
    volumes:
      - ./src:/app
    tty: true
    env_file:
      - .env
  socket:
    build:
      context: .
      dockerfile: echo/Dockerfile
    networks:
      laravel-testcase-networks:
    working_dir: /app
    expose:
      - 6001
    volumes:
      - ./socket:/app
    tty: true
    links:
      - fpm
      - redis
    env_file:
      - .env
  db:
    image: mariadb
    expose:
      - 3306
    volumes:
      - ./mysql/data:/var/lib/mysql
      - ./mysql/init:/docker-entrypoint-initdb.d:rw
      - ./dump.sql:/docker-entrypoint-initdb.d/dump.sql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: binliz
      MYSQL_USER: binliz
      MYSQL_PASSWORD: password
    networks:
      laravel-testcase-networks:
  redis:
    image: redis:7.0.5-alpine
    command: '--requirepass rPzm1Q6NqFqejQRhaJ/yCPesmdSdkOhZArnftBfRpSOYIbVA2Rq+M/xDOcM31D9z05KpWIoUeQKZSVxc'
    restart: always
    volumes:
      - ./redis/data:/data
    networks:
      laravel-testcase-networks:
  memcached:
    image: memcached:1.6.17-alpine
    restart: always
    command: [ "-m", "256" ]
  appsetup:
    build:
      context: .
      dockerfile: php/Dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
        - USER=${USER:-laravel}
    networks:
      laravel-testcase-networks:
    working_dir: /app
    tty: true
    stdin_open: true
    command: sh -c "php artisan storage:link && php artisan config:clear && php artisan migrate"
    links:
      - db
    volumes:
      - ./src:/app
    env_file:
      - .env
networks:
  laravel-testcase-networks:
